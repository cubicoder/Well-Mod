buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

version = "${mc_version}-${mod_version}"
group = 'cubicoder'
archivesBaseName = "${mod_id}"

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: "${mappings_channel}", version: "${mappings_version}-${mc_version}"

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            
            // to fix Patchouli mixin: https://github.com/VazkiiMods/Patchouli/issues/375
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                well {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            
            // to fix Patchouli mixin: https://github.com/VazkiiMods/Patchouli/issues/375
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                well {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            
            // to fix Patchouli mixin: https://github.com/VazkiiMods/Patchouli/issues/375
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            args '--mod', "${mod_id}", '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                well {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
     // If you have mod jar dependencies in ./libs, you can declare them as a repository like so:
    // flatDir {
    //     dir 'libs'
    // }
    
    // JEI
    maven {
        url "https://maven.blamejared.com/"
    }
    // other CurseForge mods
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.39'

    compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")

    implementation fg.deobf("curse.maven:the-one-probe-245211:${top_fileid}")
    
    implementation fg.deobf("curse.maven:jade-324717:${jade_fileid}")
    
    implementation fg.deobf("curse.maven:catalogue-459701:${catalogue_fileid}")
    implementation fg.deobf("curse.maven:configured-457570:${configured_fileid}")
    
    implementation fg.deobf("curse.maven:pipez-443900:3760254")
    implementation fg.deobf("curse.maven:cofh-core-69162:4022663")
    implementation fg.deobf("curse.maven:thermal-foundation-222880:4022666")
    implementation fg.deobf("curse.maven:thermal-expansion-69163:4063134")
    implementation fg.deobf("curse.maven:thermal-innovation-291737:3788896")
    implementation fg.deobf("curse.maven:patchouli-306770:3847029")
    implementation fg.deobf("curse.maven:itank-256991:3545011")
    implementation fg.deobf("curse.maven:gamemenumodoption-353051:3600710")
    implementation fg.deobf("curse.maven:reauth-237701:4408006")
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "${mod_name}",
                "Specification-Vendor"    : "cubicoder",
                "Specification-Version"   : "${mc_version}",
                "Implementation-Title"    : "${mod_id}",
                "Implementation-Version"  : "${mod_version}",
                "Implementation-Vendor"   : "cubicoder",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish plugin
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
// publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
